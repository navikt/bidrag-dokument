name: continious integration
on:
  push:
    branches:
      - '**'

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/bidrag-dokument:${{ github.sha }}

jobs:

  restart-testdata:
    name: restart kubernetes pods bidrag-dokument-testdata
    runs-on: self-hosted

    steps:
      - run: kubectl config use-context dev-fss
      - name: restart bidrag-dokument-testdata pods at the default namespace
        if: github.ref == 'refs/heads/main'
        run: |
          PODS_TESTDATA=$(kubectl get pods -l app=bidrag-dokument-testdata | awk '{print $1}' | grep -v NAME)
          kubectl delete pods $(echo $PODS_TESTDATA | sed 's;\n; ;')
      - name: restart bidrag-dokument-testdata pods at namespace q1
        if: github.ref != 'refs/heads/main'
        run: |
          PODS_TESTDATA=$(kubectl get pods -n q1 -l app=bidrag-dokument-testdata  | awk '{print $1}' | grep -v NAME)
          kubectl delete pods -n q1 $(echo $PODS_TESTDATA | sed 's;\n; ;')

  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: navikt/bidrag-docker/exists@v1
        id: dockerimage
        with:
          image_name: bidrag-dokument
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ::set-env name=NOT_FOUND::${{ steps.dockerimage.outputs.not_found }}
      - uses: actions/checkout@v2
        if: env.NOT_FOUND == 'true'
      - uses: actions/setup-java@v1.3.0
        if: env.NOT_FOUND == 'true'
        with:
          java-version: '14'
      - uses: actions/cache@v1
        if: env.NOT_FOUND == 'true'
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-maven/setup@v1
        if: env.NOT_FOUND == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: navikt/bidrag-maven/verify-dependencies@v1
        if: env.NOT_FOUND == 'true'
      - run: mvn install -B -e
        if: env.NOT_FOUND == 'true'
      - name: Build and publish Docker image
        if: env.NOT_FOUND == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy_dev:
    runs-on: ubuntu-latest
    name: Deploy docker image to dev
    if: github.ref != 'refs/heads/release'
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - name: Deploy to dev-fss, default namespace
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/nais/nais.yaml
          VARS: deploy/nais/q0.json
      - name: Deploy to dev-fss, namespace q1
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/nais/nais.yaml
          VARS: deploy/nais/q1.json

  run_cucumber:
    runs-on: self-hosted
    name: Run cucumber integration tests
    needs: deploy_dev
    steps:
      - uses: navikt/bidrag-integration/cucumber-clone@v1.0.3
      - uses: navikt/bidrag-maven/cucumber-backend@v3.0.1
        with:
          maven_image: maven:3.6.3-jdk-13
          cucumber_tag: bidrag-dokument
          username: j104364
          test_user: z992903
        env:
          USER_AUTHENTICATION: ${{ secrets.USER_AUTHENTICATION }}
          TEST_USER_AUTHENTICATION: ${{ secrets.TEST_USER_AUTHENTICATION }}
      - run: sudo rm -rf bidrag-cucumber-backend

  bump_dev_version:
    runs-on: ubuntu-latest
    name: Bump SNAPSHOT version
    if: github.ref == 'refs/heads/main'
    needs: run_cucumber

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn release:update-versions
      - run: |
          BUMPED_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=version::${BUMPED_VERSION}
        id: snapshot
      - uses: navikt/bidrag-git/commit@v3
        with:
          commit_message: "Bumped to new version: ${{ steps.snapshot.outputs.version }}"
          pattern: "pom.xml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_prod:
    runs-on: ubuntu-latest
    name: Deploy docker image to prod
    if: github.ref == 'refs/heads/release'
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: deploy/nais/nais-p.yaml
          VAR: namespace=default

  tag_prod_deploy:
    runs-on: ubuntu-latest
    name: Tag latest deploy to prod
    needs: deploy_prod

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: |
          TAG_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
          echo ::set-output name=tag::${TAG_VERSION}
        id: release
      - uses: navikt/bidrag-git/tag@v3
        with:
          tag_message: Releasing version ${{ steps.release.outputs.tag }}
          tag: ${{ steps.release.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
